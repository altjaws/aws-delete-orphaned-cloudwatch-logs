#==================================================================================================
# Function: delete-orphaned-cloudwatch-logs
# Purpose:  Deletes CloudWatch log groups that were generated by Lambda functions that no longer exist.
#==================================================================================================

import boto3
import json

#==================================================================================================
# Function handler
#==================================================================================================
def lambda_handler(event, context):

    # Determine whether the user just wants to view the orphaned logs.
    view_only = ('view_only' in event and event['view_only'].lower() == 'true')

    logs_client = boto3.client('logs')

    # Collect the list of existing Lambda functions.
    functions = []
    for function in boto3.client('lambda').list_functions().get('Functions'):
        functions.append(function['FunctionName'])
    
    print(json.dumps(functions))
    
    orphaned_count = 0
    
    paginator = logs_client.get_paginator('describe_log_groups')
    for response in paginator.paginate():
        for log_group in response.get('logGroups'):
            
            #  By default, Lambda-generated log groups begin with "/aws/lambda/".
            if log_group['logGroupName'].startswith('/aws/lambda/'):
                function_name  = log_group['logGroupName'].split("/")[3]

                if function_name in functions:
                    print ("{} exists, not deleting.".format(function_name))
                else:
                    
                    orphaned_count += 1
                    
                    if view_only: 
                        print('{} does not exist.'.format(function_name))

                    else:
                        # There is no associated Lambda function, so delete the log group.
                        print('{} does not exist, DELETING.'.format(function_name))
                        logs_client.delete_log_group(logGroupName = log_group['logGroupName'])

    return_message = 'There were {} orphaned log groups.'.format(orphaned_count)
                        
    print (return_message)
    return return_message
